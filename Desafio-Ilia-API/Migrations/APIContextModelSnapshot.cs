// <auto-generated />
using System;
using Desafio_Ilia_API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Desafio_Ilia_API.Migrations
{
    [DbContext(typeof(APIContext))]
    partial class APIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Desafio_Ilia_API.AuxClasses.Horario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<int?>("RegistroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistroId");

                    b.ToTable("Horario");
                });

            modelBuilder.Entity("Desafio_Ilia_API.Models.Alocacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Dia")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeDoProjeto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RelatorioId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Tempo")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("RelatorioId");

                    b.ToTable("Alocacoes");
                });

            modelBuilder.Entity("Desafio_Ilia_API.Models.Registro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Dia")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RelatorioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RelatorioId");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("Desafio_Ilia_API.Models.Relatorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("HorasDevidas")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HorasExcedentes")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HorasTrabalhadas")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Relatorios");
                });

            modelBuilder.Entity("Desafio_Ilia_API.AuxClasses.Horario", b =>
                {
                    b.HasOne("Desafio_Ilia_API.Models.Registro", null)
                        .WithMany("Horarios")
                        .HasForeignKey("RegistroId");
                });

            modelBuilder.Entity("Desafio_Ilia_API.Models.Alocacao", b =>
                {
                    b.HasOne("Desafio_Ilia_API.Models.Relatorio", null)
                        .WithMany("Alocacoes")
                        .HasForeignKey("RelatorioId");
                });

            modelBuilder.Entity("Desafio_Ilia_API.Models.Registro", b =>
                {
                    b.HasOne("Desafio_Ilia_API.Models.Relatorio", null)
                        .WithMany("Registros")
                        .HasForeignKey("RelatorioId");
                });

            modelBuilder.Entity("Desafio_Ilia_API.Models.Registro", b =>
                {
                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("Desafio_Ilia_API.Models.Relatorio", b =>
                {
                    b.Navigation("Alocacoes");

                    b.Navigation("Registros");
                });
#pragma warning restore 612, 618
        }
    }
}
